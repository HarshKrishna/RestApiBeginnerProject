package com.hk.rest.webservices.ui.controller;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.hk.rest.webservices.ui.model.request.UserDetailsRequest;
import com.hk.rest.webservices.ui.model.response.UserRest;

@RestController
@RequestMapping("users")
public class UserController {
//	@GetMapping
//    public String getUser(){
//        return "get user was called ";
//    }

	@GetMapping(produces = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE })
	public ResponseEntity<UserRest> getUser(@RequestParam(value = "page", defaultValue = "1") int page,
			@RequestParam(value = "limit", defaultValue = "50") int limit) {
//		return "get user was called with request parameter page = " + page + " and limit = " + limit;
		UserRest returnUser = new UserRest();
		returnUser.setUserId("3256");
		returnUser.setFirstName("Harsh");
		returnUser.setLastName("Krishna");
		returnUser.setEmail("hk@rest.com");
		returnUser.setAddress("Gaya");
		return new ResponseEntity<UserRest>(returnUser, HttpStatus.BAD_REQUEST);
	}

	@GetMapping(path = "/{userId}")
	public String getUser(@PathVariable String userId) {
		return "get user was called with userId = " + userId;
	}

	@GetMapping(path = "/{userId}/{userName}")
	public String getUser(@PathVariable String userId, @PathVariable String userName) {
		return "get user was called with userId = " + userId + " userName : " + userName;
	}

	@PostMapping(consumes = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE }, produces = {
			MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE })
	public ResponseEntity<UserRest> createuser(@Valid @RequestBody UserDetailsRequest userDetails) {

		UserRest returnUser = new UserRest();
		returnUser.setFirstName(userDetails.getFirstName());
		returnUser.setLastName(userDetails.getLastName());
		returnUser.setEmail(userDetails.getEmail());
		return new ResponseEntity<UserRest>(returnUser,HttpStatus.ACCEPTED);
	}

	@PutMapping
	public String updateUser() {
		return "update user was called";
	}

	@DeleteMapping
	public String deleteUser() {
		return "Delete user was called";
	}

}
